bfgminer (2.9.5-0precise1) precise; urgency=low

  * Bug fixes only.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Tue, 11 Dec 2012 03:11:49 -0000


bfgminer (2.9.4-0precise1) precise; urgency=low

  * Documented solo mining in README.
  * Lots of small bugfixes everywhere.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Tue, 04 Dec 2012 03:13:43 -0000


bfgminer (2.9.3-0precise1) precise; urgency=low

  * Many stratum bugfixes, including support for fractional difficulties.
  * Fix GBT to work properly with very short expiration times.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Fri, 16 Nov 2012 03:49:51 -0000


bfgminer (2.9.2-0precise1) precise; urgency=low

  * modminer & x6500: New bitstream, improving functional performance by about 10 Mh/s on average. You'll need to power cycle your device, or use the new --force-dev-init option to upload the new bitstream.
  * x6500: Support for temperature sensors, including --temp-target & co.
  * x6500: Extended per-FPGA details in RPC API.
  * x6500: Support for older X6500 devices by manually specifying their serial numbers as --scan-serial x6500:serialnumber.
  * Some basic stratum transparency checks to help keep pools accountable using new mining.get_transactions method.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Wed, 07 Nov 2012 18:46:00 -0000


bfgminer (2.9.1-0precise1) precise; urgency=low

  * RPC: Add support for X6500 FPGAs.
  * Enforce --expiry option to make solo mining without longpoll move on eventually.
  * Always detect non-scrypt if Stratum is in use.
  * Various other bug fixes, including a number of memory leaks.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Sun, 30 Oct 2012 16:16:22 -0000


bfgminer (2.9.0-0precise1) precise; urgency=low

  * X6500: New driver for mining on FPGA Mining LLC's X6500 coprocessor.
  * Support for solo mining against bitcoind 0.7's GBT interface using new --coinbase-addr option (powered by libblkmaker 0.2.0).
  * OpenCL: Rewritten dynamic intensity code should fix remaining issues with it.
  * BFGMiner now displays the share's best difficulty as well as the current pool difficulty.
  * Support for saving and restoring pool priorities in config file, as well as changing them all at once in the curses TUI (by "blinkier").
  * OpenCL: Updated kernels which should allow ultra low memory speeds once again (idea courtesy of Vbs).
  * Stratum support by Con.
  * BFGMiner now tries to actually catch crashes and unless the --no-restart option is given, it will try to restart cleanly.
  * OpenCL: Scrypt will now not fail when setting high thread concurrency values that still return some RAM even if OpenCL returns an error on that RAM allocation.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Sun, 28 Oct 2012 10:39:56 -0000


bfgminer (2.8.3-0precise1) precise; urgency=low

  * Various bugs fixed, no new features.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Mon, 18 Oct 2012 12:56:56 -0000


bfgminer (2.8.2-0precise1) precise; urgency=low

  * Numerous fixups for Enterpoint's Cairsmore dynamic clocking; it has actually been tested this time. :)
  * Support for --temp-target and --temp-hysteresis controls on ModMiner FPGA devices.
  * Generic failure management for all devices, including automatically attempting to restart dead devices.
  * Improved portability to new platforms, partially including Cygwin.
  * Various minor error handling improvements and bugfixes.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Mon, 08 Oct 2012 23:13:01 -0000


bfgminer (2.8.1-0precise1) precise; urgency=low

  * Many improvements for Enterpoint's Cairsmore, including (experimental) support for Glasswalker's dynamic frequency bitstream.
  * New --coinbase-sig option that lets you embed a short tidbit in any blocks you personally find (only on GBT-enabled pools).
  * Generic dynamic clocking framework based on the Ztex driver's (written by nelisky), now used by ModMiner and (Glasswalker) Cairnsmore.
  * New RPC "identify" command to flash LEDs on some FPGAs (currently BitForce and GW Cairnsmore).
  * Include share difficulty information in log and RPC.
  * Lots of other various bugfixes and small improvements.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Thu, 27 Sep 2012 06:20:05 -0000


bfgminer (2.8.0-0precise1) precise; urgency=low

  * Basic getblocktemplate decentralized mining protocol support, including rolling extranonce (based on libblkmaker 0.1).
  * New Cairnsmore driver, including autodetection (based in part on Kano's Icarus "timing" feature).
  * Support for per-pool proxies, based in part on Kano's similar work (but cleaned up and not compatible).
  * Numerous minor fixups to Ztex driver.
  * Minor improvements to Icarus driver, including the ability to disable the reopen quirk and detection when the default hash speed is wrong.
  * Updated RPC API from Kano to include debug and setconfig methods.
  * Updated miner.php from Kano to hide IP addresses for security (configurable).

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Sat, 15 Sep 2012 20:57:28 -0000


bfgminer (2.7.5-0precise1) precise; urgency=low

  * ModMiner: Revamped the dynamic clocking algorithm to keep FPGAs at higher speeds with fewer hardware errors.
  * OpenCL: Restored old default for Cypress (Radeon 58xx) worksize, to fix performance regression introduced in 2.7.2.
  * Failover is now fixed, courtesy of Con.
  * FPGAs: "-S all" option to try probing all enumerated serial ports on systems without non-miner serial devices.
  * Reverted "restart on ADL failure" feature that never did anything useful (if I'm wrong, complain and I'll make a switch to add it back)

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Thu, 27 Aug 2012 17:12:09 -0000


bfgminer (2.7.4-0precise1) precise; urgency=low

  * More fixes.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Thu, 23 Aug 2012 21:48:02 -0000


bfgminer (2.7.3-0precise1) precise; urgency=low

  * Bugfixes for networking, new kernels, and updated miner.php.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Thu, 23 Aug 2012 08:05:32 -0000


bfgminer (2.7.1-0precise1) precise; urgency=low

  * The occasional strange behaviour where lots of work would end up on backup pools in failover mode should be fixed.
  * The occasional scenario where one pool dies and the others behave like they're slow to provide work should be fixed.
  * Very high hashrate (U > 100) machines should now be able to work unhindered even on pools that don't support rolltime.
  * The --retry-pause/-R option no longer does anything and is deprecated in preference for faster communications and simpler code.
  * -r was removed as a shortcut for --retries.
  * Hopefully the dynamic mode for GPUs is fixed on windows.
  * Hopefully the 7 day windows crash bug has been fixed

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Tue, 21 Aug 2012 16:43:09 -0000


bfgminer (2.7.0-0precise1) precise; urgency=low

  * The main change in this version is a complete rewrite of the getwork requesting mechanism. Con had been slowly hacking away at the old one for some time, but finally gave up in disgust and has rewritten it to some extent. Previously, mining threads would occasionally throw out a request for more work, some arbitrary test would be done on whether more work should be requested, and it handed off the message to another thread which spawned another thread and that then sent the request and so on. Worse yet it was hard to find the right place to reuse work and so it was never reused to its utmost potential. The rewrite involves scheduling a new request based on the rate the old work items get used up, and is much better at predicting when it needs to leak work to backup pools and less likely to throw a "pool is not providing work fast enough" message. Overall you should now see much more Local Work (LW), the efficiency will be higher on pools that support rolltime, less work will be discarded, any magnitude rig will be kept solidly busy - note this MAY mean your overclocks will become that much more stressed if you have set clocks very aggressively. Thanks to Con and the numerous people who tested this during its development phase.
  * New pool strategy: Balance.
  * With the change to queueing and more roll work being possible than ever before, the imbalance between pools that support rolltime and those that don't will now be extreme in load balance strategy. To offset that, and since the number of people using load balance has been increasing, the new strategy was added to try and give roughly the same number of shares to each pool.
  * Other minor bugfixes.

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Tue, 21 Aug 2012 01:50:33 -0000


bfgminer (2.6.5-0precise1) precise; urgency=low

  * New BitFORCE firmware flash utility. When compiled with BitFORCE support, run `bitforce-firmware-flash` to get usage.
  * Fixed hanging when using "Switch User" on Windows. This feature still kills ADL, though, so use --no-restart (and don't enable fan control or overclocking) if you plan to use it.
  * Fixed dynamic mode on Windows. By default, Windows timer resolution is only 15ms and we're trying to sample much smaller than that. This was leading to the time taken to do GPU work appearing as zero for many samples. Now, a Windows multimedia timing API will be used to request more precision.
  * gpu-memdiff should now take effect when you change gpu engine clock from the menu as well.
  * The ADL gpu-map feature should work now when you have more ADL devices than OpenCL (eg, ATI cards that don't support OpenCL).
  * More tweaks to the queueing mechanism to increase efficiency and keep minirigs fully work laden.
  * Failover-only can now be changed via the RPC API.
  * Updated miner.php from Kano

 -- Luke Dashjr <luke+bfgminer@dashjr.org>  Mon, 20 Aug 2012 23:59:19 -0000


bfgminer (2.6.4-0precise1) precise; urgency=low

  * More drastic improvements to ModMiner clock adjustment algorithm. Downclocking should be more conservative, and BFGMiner will even raise the clock speed when it's doing well.
  * ModMiners are now kept busier (less idle time) and nonces are checked against the previous work to catch races. This may result in a higher utility (effective hashrate).
  * Tested and fixed problems managing throttling BitFORCE Singles. An 880 MH/s Single that was throttling to 440 MH/s before (and throwing lots of garbled errors) is now working cleanly at 590 MH/s - a 34% improvement in hashrate!
  * A bunch of annoying crashes were fixed:
  * * With high-share devices when network connectivity is lost.
  * * GPU mining not functional when any OpenCL platform fails.
  * * Occasional deadlock/hang during exit.
  * New --debuglog option to include debug information in log file (see README) but not in main console.
  * The scrypt code was updated - now ALL results from a GPU are checked to see if they're valid and if not, instead of being submitted where they are guaranteed to be rejected, they register as hardware errors. This will make tuning your scrypt parameters easier as HW error count will rise if you've set the parameters too high.
  * Updated miner.php from Kano

 -- graeme <graeme@sudo.ca>  Thu, 09 Aug 2012 10:39:00 -0700


bfgminer (2.6.3.2-0precise2) precise; urgency=low

  * Switched to a Debian native package so that building minor packaging versions is easier.
  * Dropped debhelper reqs to version 7, so we can build on Lucid.

 -- graeme <graeme@sudo.ca>  Thu, 09 Aug 2012 10:39:00 -0700


bfgminer (2.6.3.2-0precise1) precise; urgency=low

  * Added modprobe config for bitforce devices.

 -- graeme <graeme@sudo.ca>  Wed, 08 Aug 2012 11:56:28 -0700


bfgminer (2.6.3.1-0precise1) precise; urgency=medium
  Version 2.6.3.1 - August 8, 2012

  * Added minor version increment so that Launchpad will accept new orig.tar.xz upload. :/

 -- graeme <graeme@sudo.ca>  Wed, 08 Aug 2012 11:11:28 -0700

bfgminer (2.6.3-1precise1) precise; urgency=medium
  Version 2.6.3 - August 6, 2012

  * First release to attempt Debian packaging.
  * Complete rewrite of the queueing mechanism which gets new work from the pools. The code in that section had gotten out of hand and become a "state machine" that was difficult to model its behaviour and occasionally led to stalls during startup and what-not without work and perhaps queued too much work in general. Now it monitors carefully the amount of queued and available work on a pool-by-pool basis and only queues when needed, but tries hard to make sure it doesn't run empty. You will notice the the TQ value now hovers around zero when all is well, and only jumps up transiently, all going well. Hopefully the efficiency is even higher now too. Detection of pool lag should be more accurate now, and less shares should leak to backup pools now as well.
  * Numerous bugfixes and workarounds for ModMiner driver, bringing it to a functional level even on Windows.
  * Scrypt support enabled for Windows binaries.
  * Can set failover-only mode now from the menu during runtime.
  * One-shot schedules (exactly one of --sched-stop or --sched-start) now handle times beyond midnight properly.
  * ModMiner now shows bitstream upload in summary line rather than spamming the log (progress is still logged every 10% for timestamps).
  * The RPC API should be able to bind to the port immediately on linux now instead of having to wait 60 seconds as it used to.
  * Proper big endian (routers) support, including fixing and enabling functionality that crashed before.
  * Minimal support for the Enterpoint's Cairnsmore1 FPGA mining board.
  * Throttling episodes on bitforce devices will now perform reasonably (given the circumstances) and/or register as HW errors.
  * Support for all FPGA drivers enabled by default when compiling from source.

 -- graeme <graeme@sudo.ca>  Tue, 07 Aug 2012 10:51:00 -0500
